# =====================================================
# CONFIGURACIÓN DE NGINX PARA SISTEMA DE TICKETS IT
# VENTURINO - Configuración de Producción
# =====================================================

# Configuración para HTTP (redirige a HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name tudominio.com www.tudominio.com;
    
    # Redirigir todo el tráfico HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

# Configuración principal HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tudominio.com www.tudominio.com;
    
    # =====================================================
    # CONFIGURACIÓN SSL/TLS
    # =====================================================
    
    # Certificados SSL (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/tudominio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tudominio.com/privkey.pem;
    
    # Configuración SSL moderna y segura
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Otros headers de seguridad
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self';" always;
    
    # =====================================================
    # CONFIGURACIÓN GENERAL
    # =====================================================
    
    # Directorio raíz (para archivos estáticos si es necesario)
    root /var/www/it-ticket-system/public;
    index index.html;
    
    # Configuración de logs
    access_log /var/log/nginx/tickets-system.access.log;
    error_log /var/log/nginx/tickets-system.error.log;
    
    # Configuración de archivos
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # =====================================================
    # CONFIGURACIÓN DE PROXY PARA NODE.JS
    # =====================================================
    
    # Proxy principal para la aplicación Node.js
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # =====================================================
    # CONFIGURACIÓN DE ARCHIVOS ESTÁTICOS
    # =====================================================
    
    # Archivos CSS, JS, imágenes (con cache)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Intentar servir archivo estático, si no existe, proxy a Node.js
        try_files $uri @nodejs;
    }
    
    # Fallback para archivos estáticos
    location @nodejs {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # =====================================================
    # CONFIGURACIÓN DE UPLOADS
    # =====================================================
    
    # Directorio de archivos subidos
    location /uploads/ {
        alias /var/www/it-ticket-system/uploads/;
        
        # Seguridad: no ejecutar scripts
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # Headers de seguridad para descargas
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        
        # Cache para archivos subidos
        expires 1M;
        add_header Cache-Control "public";
    }
    
    # =====================================================
    # CONFIGURACIÓN DE API
    # =====================================================
    
    # Rutas de API con configuración especial
    location /api/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Sin cache para APIs
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Timeouts más largos para APIs
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # =====================================================
    # CONFIGURACIÓN DE SEGURIDAD
    # =====================================================
    
    # Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear acceso a archivos de configuración
    location ~* \.(env|json|sql|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear acceso a node_modules
    location /node_modules/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # =====================================================
    # CONFIGURACIÓN DE MONITOREO
    # =====================================================
    
    # Endpoint de health check
    location /health {
        proxy_pass http://127.0.0.1:3000/health;
        access_log off;
    }
    
    # Status de Nginx (solo desde localhost)
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
        access_log off;
    }
    
    # =====================================================
    # CONFIGURACIÓN DE COMPRESIÓN
    # =====================================================
    
    # Habilitar compresión gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # =====================================================
    # CONFIGURACIÓN DE RATE LIMITING
    # =====================================================
    
    # Rate limiting para login
    location /api/auth/login {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Rate limiting para registro
    location /api/auth/register {
        limit_req zone=register burst=3 nodelay;
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # =====================================================
    # MANEJO DE ERRORES PERSONALIZADOS
    # =====================================================
    
    # Páginas de error personalizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/it-ticket-system/public;
        internal;
    }
    
    location = /50x.html {
        root /var/www/it-ticket-system/public;
        internal;
    }
}

# =====================================================
# CONFIGURACIÓN GLOBAL DE RATE LIMITING
# (Agregar en /etc/nginx/nginx.conf en el bloque http)
# =====================================================

# Descomentar y agregar estas líneas en nginx.conf:
#
# http {
#     # Rate limiting zones
#     limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
#     limit_req_zone $binary_remote_addr zone=register:10m rate=3r/m;
#     limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
#     
#     # Otras configuraciones...
# }

# =====================================================
# INSTRUCCIONES DE INSTALACIÓN
# =====================================================

# 1. Copiar este archivo a: /etc/nginx/sites-available/tickets-system
# 2. Reemplazar "tudominio.com" con tu dominio real
# 3. Crear enlace simbólico: ln -s /etc/nginx/sites-available/tickets-system /etc/nginx/sites-enabled/
# 4. Probar configuración: nginx -t
# 5. Recargar Nginx: systemctl reload nginx
# 6. Obtener certificado SSL: certbot --nginx -d tudominio.com -d www.tudominio.com

# =====================================================
# NOTAS IMPORTANTES
# =====================================================

# - Reemplaza "tudominio.com" con tu dominio real
# - Asegúrate de que el certificado SSL esté configurado
# - Verifica que los directorios de logs existan
# - Ajusta los límites según tus necesidades
# - Monitorea los logs regularmente
